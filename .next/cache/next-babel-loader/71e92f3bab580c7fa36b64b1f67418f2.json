{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pract\\\\create-react-app\\\\Components\\\\CommentsLists.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from 'axios';\nexport default function CommentList({\n  postid\n}) {\n  console.log({\n    postid\n  });\n\n  const fetchComments = async () => {\n    const res = await axios.get(`/comments?postId=${postid}`);\n\n    const comments = _objectSpread({}, res.data);\n\n    console.log(comments);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, comments.map(comment => __jsx(\"li\", {\n    key: comment.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, comment.body))));\n}","map":{"version":3,"sources":["D:/Pract/create-react-app/Components/CommentsLists.js"],"names":["axios","CommentList","postid","console","log","fetchComments","res","get","comments","data","map","comment","id","body"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,WAAT,CAAqB;AAACC,EAAAA;AAAD,CAArB,EAA+B;AAC1CC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAACF,IAAAA;AAAD,GAAZ;;AACJ,QAAMG,aAAa,GAAG,YAAY;AAC9B,UAAMC,GAAG,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAW,oBAAmBL,MAAO,EAArC,CAAlB;;AACA,UAAMM,QAAQ,qBAAOF,GAAG,CAACG,IAAX,CAAd;;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ;AACH,GAJD;;AAKI,SACI,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,QAAQ,CAACE,GAAT,CAAaC,OAAO,IACrB;AAAI,IAAA,GAAG,EAAEA,OAAO,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBD,OAAO,CAACE,IAA9B,CADC,CADL,CADJ,CADJ;AAUH","sourcesContent":["import axios from 'axios'\r\n\r\nexport default function CommentList({postid}) {\r\n    console.log({postid})\r\nconst fetchComments = async () => {\r\n    const res = await axios.get(`/comments?postId=${postid}`)\r\n    const comments = {...res.data}\r\n    console.log(comments)\r\n}\r\n    return(\r\n        <>\r\n            <ul>\r\n                {comments.map(comment => (\r\n                <li key={comment.id}>{comment.body}\r\n                </li>\r\n                ))}\r\n            </ul>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}