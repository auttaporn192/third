{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction useFetch(url) {\n  var _useState = useState([]),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var fetchData = function fetchData() {\n    var res;\n    return _regeneratorRuntime.async(function fetchData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios.get(url));\n\n          case 2:\n            res = _context.sent;\n            setData(res.data);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n\n  useEffect(function () {\n    fetchData();\n  }, [url]);\n  console.log(data);\n  return data;\n}\n\nexport default useFetch;","map":{"version":3,"sources":["D:/Pract/create-react-app/Lib/useFetch.js"],"names":["useState","useEffect","axios","useFetch","url","data","setData","fetchData","get","res","console","log"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AAAA,kBACGJ,QAAQ,CAAC,EAAD,CADX;AAAA,MACdK,IADc;AAAA,MACRC,OADQ;;AAGrB,MAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACEL,KAAK,CAACM,GAAN,CAAUJ,GAAV,CADF;;AAAA;AACVK,YAAAA,GADU;AAGhBH,YAAAA,OAAO,CAACG,GAAG,CAACJ,IAAL,CAAP;;AAHgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAMAJ,EAAAA,SAAS,CAAC,YAAM;AACdM,IAAAA,SAAS;AACV,GAFQ,EAEN,CAACH,GAAD,CAFM,CAAT;AAGFM,EAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACE,SAAOA,IAAP;AACD;;AAED,eAAeF,QAAf","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nfunction useFetch(url) {\r\n  const [data, setData] = useState([])\r\n\r\n  const fetchData = async () => {\r\n    const res = await axios.get(url)\r\n\r\n    setData(res.data)\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData()\r\n  }, [url])\r\nconsole.log(data)\r\n  return data\r\n}\r\n\r\nexport default useFetch\r\n"]},"metadata":{},"sourceType":"module"}