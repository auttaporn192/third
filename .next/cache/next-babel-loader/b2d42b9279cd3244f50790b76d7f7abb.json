{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"D:\\\\Pract\\\\create-react-app\\\\Components\\\\CommentsLists.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nexport default function CommentList(_ref) {\n  var pid = _ref.pid;\n\n  var _useState = useState([]),\n      comments = _useState[0],\n      setComments = _useState[1];\n\n  console.log({\n    pid: pid\n  });\n\n  var fetchComments = function fetchComments() {\n    var res;\n    return _regeneratorRuntime.async(function fetchComments$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios.get(\"/comments?postId=\".concat(pid)));\n\n          case 2:\n            res = _context.sent;\n            setComments(res.data);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n\n  useEffect(function () {\n    fetchComments();\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, comments.map(function (comment) {\n    return __jsx(\"li\", {\n      key: comment.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, comment.body);\n  })));\n}","map":{"version":3,"sources":["D:/Pract/create-react-app/Components/CommentsLists.js"],"names":["useState","useEffect","axios","CommentList","pid","comments","setComments","console","log","fetchComments","get","res","data","map","comment","id","body"],"mappings":";;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,WAAT,OAA8B;AAAA,MAAPC,GAAO,QAAPA,GAAO;;AAAA,kBACXJ,QAAQ,CAAC,EAAD,CADG;AAAA,MACpCK,QADoC;AAAA,MAC1BC,WAD0B;;AAE7CC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAACJ,IAAAA,GAAG,EAAHA;AAAD,GAAZ;;AACE,MAAMK,aAAa,GAAG,SAAhBA,aAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACFP,KAAK,CAACQ,GAAN,4BAA8BN,GAA9B,EADE;;AAAA;AACdO,YAAAA,GADc;AAGpBL,YAAAA,WAAW,CAACK,GAAG,CAACC,IAAL,CAAX;;AAHoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAMAX,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,aAAa;AACd,GAFQ,EAEN,EAFM,CAAT;AAGE,SACI,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,QAAQ,CAACQ,GAAT,CAAa,UAAAC,OAAO;AAAA,WACrB;AAAI,MAAA,GAAG,EAAEA,OAAO,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsBD,OAAO,CAACE,IAA9B,CADqB;AAAA,GAApB,CADL,CADJ,CADJ;AAUH","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nexport default function CommentList({ pid }) {\r\n  const [comments, setComments] = useState([])\r\nconsole.log({pid})\r\n  const fetchComments = async () => {\r\n    const res = await axios.get(`/comments?postId=${pid}`)\r\n\r\n    setComments(res.data)\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchComments()\r\n  }, [])\r\n    return(\r\n        <>\r\n            <ul>\r\n                {comments.map(comment => (\r\n                <li key={comment.id}>{comment.body}\r\n                </li>\r\n                ))}\r\n            </ul>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}